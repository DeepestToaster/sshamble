name: Build and upload binaries
on:
  release:
    types: [published]
  push:
  pull_request:
permissions:
  contents: read
jobs:
  build:
    name: Build binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - {GOOS: linux, GOARCH: amd64}
          - {GOOS: linux, GOARCH: arm, GOARM: 6}
          - {GOOS: linux, GOARCH: arm64}
          - {GOOS: darwin, GOARCH: amd64}
          - {GOOS: darwin, GOARCH: arm64}
          - {GOOS: windows, GOARCH: amd64},
          - {GOOS: windows, GOARCH: arm64},
          - {GOOS: freebsd, GOARCH: amd64}
    steps:
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.x
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Build binary
        run: |
          VERSION="$(git describe --tags)"
          DIR="$(mktemp -d)"
          mkdir "$DIR/sshamble"
          cp LICENSE.md "$DIR/sshamble"
          go build -o "$DIR/sshamble" -ldflags "-s -w -X github.com/runZeroInc/sshamble/cmd/main.Version=$VERSION" -trimpath
          if [ "$GOOS" == "windows" ]; then
            ( cd "$DIR"; zip sshamble.zip -r sshamble )
            mv "$DIR/sshamble.zip" "sshamble-$VERSION-$GOOS-$GOARCH.zip"
          else
            tar -cvzf "sshamble-$VERSION-$GOOS-$GOARCH.tar.gz" -C "$DIR" sshamble
          fi
        env:
          CGO_ENABLED: 0
          GOOS: ${{ matrix.GOOS }}
          GOARCH: ${{ matrix.GOARCH }}
          GOARM: ${{ matrix.GOARM }}
      - name: Upload workflow artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sshamble-binaries-${{ matrix.GOOS }}-${{ matrix.GOARCH }}
          path: sshamble-*
  upload:
    name: Upload release binaries
    if: github.event_name == 'release'
    needs: build
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Download workflow artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: sshamble-binaries-*
          merge-multiple: true
      - name: Upload release artifacts
        run: gh release upload "$GITHUB_REF_NAME" sshamble-*
        env:
          GH_REPO: ${{ github.repository }}
          GH_TOKEN: ${{ github.token }}